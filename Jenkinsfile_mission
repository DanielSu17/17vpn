// NOTE:
//   we are now using a legacy Jenkins feature `Trigger builds remotely`
//   but is NOT supported by Jenkinsfile, need to configure it manually
//   DO remember to check if the paramter is set correctly after apply.
//
//   also, any change within the block of `properties()` might result in next
//   build failure, it's limitation of Jenkins WebUI limitation by design,
//   it's not a bug, don't report it as bug!!!

properties([
    buildDiscarder(
        logRotator(
            numToKeepStr: '30'
        )
    ),
    disableConcurrentBuilds(),
    parameters([
        choice(
            choices: ['dev', 'sta', 'prod'],
            description: '',
            name: 'ENV'
        ),
        string(
            defaultValue: '',
            description: '',
            name: 'SLACK_TOKEN',
            trim: false
        ),
        string(
            defaultValue: '',
            description: '',
            name: 'SLACK_USER_ID',
            trim: false
        ),
        string(
            defaultValue: '',
            description: '',
            name: 'SLACK_USER_EMAIL',
            trim: false
        ),
        string(
            defaultValue: '',
            description: '',
            name: 'ROWS',
            trim: false
        )]
    )
])


node('gcp') { timestamps { ansiColor('xterm') {
    stage('Setup Environment') {
        // Cleanup workspace before job start
        deleteDir()

        sh("mkdir -p gowork/config")
        dir("gowork/config") {
            git url: 'git@github.com:17media/configs.git',
                    credentialsId: '3dc01492-01f6-4be5-8073-8de5f458ed1e',
                    branch: 'master'
        }

        dir("gowork") {
            withCredentials([
                file(
                    credentialsId: "baggage.spreadsheet.access.token",
                    variable: "TOKEN"
                ),
                file(
                    credentialsId: "baggage.spreadsheet.access.credential",
                    variable: "CREDENTIAL"
                )
            ]) {
                // copy credentials file 
                sh("cp ${TOKEN} ./token.json")
                sh("cp ${CREDENTIAL} ./credentials.json")

                // download binary.exe from storage
                def storage = "http://cdn.17app.co"
                // version tag for avoiding cdn cache to get old binary
                def missionBinary = "39947ff2-d521-4316-ad01-72d2c3182d25.gz"
                sh("wget ${storage}/${missionBinary}")
                sh("tar zxvf ${missionBinary}")
            }
        }
    } // end of stage

    stage('Command Execute') {
        sshagent(["3dc01492-01f6-4be5-8073-8de5f458ed1e"]) {
            dir("gowork") {
                def slackChannel = "C018MHC10TW"
                sh("./generator \
                        -env=${params.ENV} \
                        -slackUserID=${params.SLACK_USER_ID} \
                        -slackUserEmail=${params.SLACK_USER_EMAIL} \
                        -slackToken=${params.SLACK_TOKEN} \
                        -rows=${params.ROWS} \
                        -slackChannel=${slackChannel} \
                        -configRoot=${env.WORKSPACE}/gowork/config \
                ")
            }
        }
    }
} /* end of ansiColor */ } /* end of timestamps */ } /* end of node */

