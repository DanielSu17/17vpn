// NOTE:
//   we are now using a legacy Jenkins feature `Trigger builds remotely`
//   but is NOT supported by Jenkinsfile, need to configure it manually
//   DO remember to check if the paramter is set correctly after apply.
//
//   also, any change within the block of `properties()` might result in next
//   build failure, it's limitation of Jenkins WebUI limitation by design,
//   it's not a bug, don't report it as bug!!!

properties([
    buildDiscarder(
        logRotator(
            numToKeepStr: '30'
        )
    ),
    disableConcurrentBuilds(),
    parameters([
        choice(
            choices: ['all', 'dev', 'sta', 'prod'],
            description: '',
            name: 'ENV'
        ),
        string(
            defaultValue: '',
            description: '',
            name: 'SLACK_TOKEN',
            trim: false
        ),
        string(
            defaultValue: '',
            description: '',
            name: 'SLACK_USER_ID',
            trim: false
        ),
        string(
            defaultValue: '',
            description: '',
            name: 'SLACK_USER_EMAIL',
            trim: false
        ),
        string(
            defaultValue: '',
            description: 'empty for new job, fill anything to push job diff',
            name: 'CONFIRM',
            trim: false
        ),
        string(
            defaultValue: '',
            description: '',
            name: 'LOKALIZE_TOKEN',
            trim: false
        ),
        string(
            defaultValue: '',
            description: '',
            name: 'PROJECT',
            trim: false
        )]
    )
])


node('gcp') { timestamps { ansiColor('xterm') {
  // setup environment variables
  env.GOPATH = "${WORKSPACE}/gowork"
  env.PATH = "${WORKSPACE}/go/bin:${env.GOPATH}/bin:${WORKSPACE}/bin:${env.PATH}"

  stage('Setup Environment') {
    // Cleanup workspace before job start
    deleteDir()

    // setup binary output directory
    sh("mkdir -p ${WORKSPACE}/bin")
    sh("mkdir -p ${env.GOPATH}")

    // setup environment for golang
    def goVersion = "1.11.13"
    def goBinary = "go${goVersion}.linux-amd64.tar.gz"
    def goURL = "https://storage.googleapis.com/golang/${goBinary}"
    sh("curl ${goURL} | tar zxf - -C ${WORKSPACE}")
    sh("go version")

    // setup govendor
    sh("go get -u github.com/kardianos/govendor")
  } // end of stage

  stage('Git Checkout') {
    sh("mkdir -p gowork/src/configs")
    dir("gowork/src/configs") {
      git url: 'git@github.com:17media/configs.git',
          credentialsId: '3dc01492-01f6-4be5-8073-8de5f458ed1e',
          branch: 'master'
    }

    dir("gowork/src/configs/tools/diffToSlack") {
        sh("govendor sync")
    }
  } // end of stage

  stage('Command Execute') {
    sshagent(['3dc01492-01f6-4be5-8073-8de5f458ed1e']) {
      dir('gowork/src/configs') {
        // enable pyenv
        virtualEnvDirectory = env.WORKSPACE + '/venv'
        def enterPyEnvCmd = 'source ' + virtualEnvDirectory + '/bin/activate'
        def setupRequirementsCmd = 'pip install -U pip && pip install -r tools/pip.require'
        sh('virtualenv ' + virtualEnvDirectory)
        retry(3) {
          sh(enterPyEnvCmd + " && " + setupRequirementsCmd)
        }

        sh(enterPyEnvCmd + " && go run tools/diffToSlack/diffToSlack.go")
      } // end of dir
    }
  } // end of stage
} /* end of ansiColor */ } /* end of timestamps */ } /* end of node */
